// Generated by CoffeeScript 1.11.1
(function() {
  var articles;

  Vue.use(AsyncComputed);

  articles = [
    {
      title: "Ascacou, a game both in browser & electron",
      type: "arcticle",
      contentUrl: "articles/ascacou-a-game-both-in-browser-electron.html"
    }, {
      title: "How to work asynchronously with Ruby as in javascript",
      type: "question of the month",
      contentUrl: "articles/placeholder.html"
    }, {
      title: "This article is about the meaning of life",
      type: "question of the month",
      contentUrl: "articles/placeholder.html"
    }, {
      title: "On Clipboard access for developers",
      type: "question of the month",
      contentUrl: "articles/placeholder.html"
    }
  ];

  this.clipcopy = (function(_this) {
    return function(text) {
      var textArea;
      textArea = document.createElement("textarea");
      textArea.style.position = 'fixed';
      textArea.style.top = 0;
      textArea.style.left = 0;
      textArea.style.width = '2em';
      textArea.style.height = '2em';
      textArea.style.padding = 0;
      textArea.style.border = 'none';
      textArea.style.outline = 'none';
      textArea.style.boxShadow = 'none';
      textArea.style.background = 'transparent';
      textArea.value = text;
      document.body.appendChild(textArea);
      textArea.select();
      try {
        document.execCommand('copy');
      } catch (error) {
        console.log(_error);
      }
      return document.body.removeChild(textArea);
    };
  })(this);

  Vue.component('articleResume', {
    props: ['article', 'exp'],
    template: "<article :id=\"slugify(article.title)\" @click='if (!exp) expand()'>\n  <span class='collapse' @click.stop='collapse()' :class='{visible: exp}'><i class='fa fa-compress'></i></span>\n  <h2>{{article.title}}</h2>\n\n  <div class='article-content' v-html=\"content\" :class='{expanded: exp}'></div>\n</article>",
    asyncComputed: {
      content: {
        get: function() {
          return Vue.http.get(this.article.contentUrl).then(function(response) {
            return response.body;
          });
        },
        "default": "..."
      }
    },
    methods: {
      expand: function() {
        this.exp = true;
        return setTimeout((function(_this) {
          return function() {
            return window.location = '#' + _this.slugify(_this.article.title);
          };
        })(this), 200);
      },
      collapse: function() {
        this.exp = false;
        return window.location = '#';
      },
      slugify: function(text) {
        return text.toLowerCase().replace(/[^\w ]+/g, '').replace(/\ +/g, '-');
      },
      clipcopy: window.clipcopy
    }
  });

  this.app = new Vue({
    el: "#app",
    data: {
      articles: articles
    },
    methods: {
      clipcopy: window.clipcopy
    }
  });


  /*
    this function is used in footer for email clipcopy event.
   */

  this.addclicked = function(event) {
    event.stopPropagation();
    event.preventDefault();
    document.querySelector('.email>span').classList.add('copied');
    return setTimeout(function() {
      return document.querySelector('.email>span').classList.remove('copied');
    }, 2000);
  };

}).call(this);

//# sourceMappingURL=main.js.map
